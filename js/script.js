function closePopup() {
    document.getElementById('popup').style.display = 'none';
    document.getElementById('overlay').style.display = 'none';
  }
  
  setTimeout(function() {
    document.getElementById('popup').style.display = 'block';
    document.getElementById('overlay').style.display = 'block';
  }, 3000);

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
const themeToggle = document.getElementById('themeToggle');
themeToggle.addEventListener('click', () => {
  document.body.classList.toggle('dark-theme');
  const isDark = document.body.classList.contains('dark-theme');
  themeToggle.textContent = isDark ? 'üåï' : 'üåë';
  setCookie('theme', isDark ? 'dark' : 'light', 365);
});

// –¢–µ–º–∞ –∏–∑ –∫—É–∫–∏
const savedTheme = getCookie('theme');
if (savedTheme === 'dark') {
  document.body.classList.add('dark-theme');
  themeToggle.textContent = 'üåï';
}

// –õ–µ–Ω—Ç–∞ –æ—Ç–∑—ã–≤–æ–≤
let reviews = [
  { name: "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞, 300–º –æ—Ç –≤–∞—Å", text: "–ö–∞–∂–¥–∞—è —Å—Å–æ—Ä–∞ —Å –º—É–∂–µ–º –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â—É—é –¥—Ä–∞–º—É, —Ç–µ–ø–µ—Ä—å —è –º–æ–≥—É –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –ª—é–±–∏–º—ã–º –¥–µ–ª–æ–º —Å –µ—â–µ –±–æ–ª—å—à–∏–º –∏–Ω—Ç–µ—Ä–µ—Å–æ–º!!!!!", rating: 5, date: new Date(), image: null },
  { name: "–î–∞–Ω—è, 15 –ª–µ—Ç", text: "MainCharacter‚Ñ¢ - –ª—É—á—à–µ–µ, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å —Å–æ –º–Ω–æ–π –≤ –∂–∏–∑–Ω–∏! –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∫–∞—Ç–∫–∏ –≤ –¥–æ—Ç–µ —è —Å–ª—É—à–∞—é –¥—É—à–µ—Ä–∞–∑–¥–∏—Ä–∞—é—â–∏–π —Ä—ç–ø. –ö–∞–∂–µ—Ç—Å—è, –º–µ–Ω—è –≤—ã–≥–æ–Ω—è—é—Ç –∏–∑ –¥–æ–º–∞", rating: 5, date: new Date(), image: null },
  { name: "—è—Å—è", text: "–Ω–æ—Ä–º", rating: 2.5, date: new Date(), image: null }
];

const reviewsList = document.getElementById('reviewsList');
const reviewForm = document.getElementById('reviewForm');
const sortReviews = document.getElementById('sortReviews');
const filterReviews = document.getElementById('filterReviews');

function renderReviews() {
  reviewsList.innerHTML = '';
  const filteredReviews = reviews.filter(review => {
    const ratingFilter = filterReviews.value;
    return ratingFilter === 'all' || review.rating == ratingFilter;
  });

  const sortedReviews = filteredReviews.sort((a, b) => {
    if (sortReviews.value === 'date') {
      return b.date - a.date;
    } else {
      return b.rating - a.rating;
    }
  });

  sortedReviews.forEach(review => {
    const reviewItem = document.createElement('div');
    reviewItem.className = 'review-item';
    reviewItem.innerHTML = `
      <strong>${review.name}</strong> (–û—Ü–µ–Ω–∫–∞: ${review.rating})<br>
      <p>${review.text}</p>
      ${review.image ? `<img src="${review.image}" alt="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞">` : ''}
      <small>${review.date.toLocaleString()}</small>
    `;
    reviewsList.appendChild(reviewItem);
  });
}

reviewForm.addEventListener('submit', (e) => {
  e.preventDefault();
  const name = document.getElementById('reviewName').value;
  const text = document.getElementById('reviewText').value;
  const rating = parseInt(document.getElementById('reviewRating').value);
  const imageFile = document.getElementById('reviewImage').files[0];

  if (name && text && rating >= 1 && rating <= 5) {
    const reader = new FileReader();
    reader.onload = function (e) {
      const newReview = {
        name,
        text,
        rating,
        date: new Date(),
        image: e.target.result
      };
      reviews.push(newReview);
      setCookie('reviews', JSON.stringify(reviews), 365);
      renderReviews();
      reviewForm.reset();
    };
    if (imageFile) {
      reader.readAsDataURL(imageFile);
    } else {
      const newReview = {
        name,
        text,
        rating,
        date: new Date(),
        image: null
      };
      reviews.push(newReview);
      setCookie('reviews', JSON.stringify(reviews), 365);
      renderReviews();
      reviewForm.reset();
    }
  }
});

sortReviews.addEventListener('change', renderReviews);
filterReviews.addEventListener('change', renderReviews);

//–û—Ç–∑—ã–≤—ã –∏–∑ –∫—É–∫–∏
const savedReviews = getCookie('reviews');
if (savedReviews) {
  reviews = JSON.parse(savedReviews);
}

renderReviews();